let 和const得共同点
let 和 const 都是块级局部变量，会形成块级作用域
let 和const 都不能重复声明
let 和const 都不会变量提升

let和const的不同点
const 声明变量的时候必须赋值
const 声明的变量只能赋值一次，并且不能修改，但是如果是复合属性就可以修改

同一作用域下，let和const不能声明相同变量，但是var可以

意思是说由let/const声明的变量，当它们包含的词法环境(Lexical Environment)被实例化时会被创建，但只有在变量的词法绑定(LexicalBinding)已经被求值运算后，才能够被访问。

注: 这里指的"变量"是let/const两者，const在ES6定义中是constant variable(固定的变量)的意思。

什么是暂时性死区
说得更明白些，当程序的控制流程在新的作用域(module, function或block作用域)进行实例化时，
在此作用域中的用let/const声明的变量会先在作用域中被创建出来，但因此时还未进行词法绑定，
也就是对声明语句进行求值运算，所以是不能被访问的，访问就会抛出错误。所以在这运行流程一进入作用域创建变量，
到变量开始可被访问之间的一段时间，就称之为TDZ(暂时死区)。