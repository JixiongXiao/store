Set 集合 是一种ES6的新的数据结构，set是以数组的形式构建的，let setArr = new Set(oldArr);
Set内部的元素是不可重复的，并且元素的key值和value值相同，也就是说set内部的元素是无序且唯一的
set的方法 增删查 add delete has clear()清除， set有size属性，可被循环

weakSet可以将对象弱引用存放在集合中，但是对象会被垃圾机制回收，因为是弱引用，并且无法被遍历

Map 字典 是一种ES6的新的数据结构 本质上map像是一个键值对的集合，他的内部元素是以[key value]的形式存在的
但是他的key不需要是数字，可以是多种数据类型，可以是数组，对象，字符串等等。但是key值不可重复，
map的方法 set delete get has size clear

weakMap 只接受对象作为键名，null除外，并且是个弱引用，键值可以是任意类型，不能被遍历，
        键名被回收后会失效


https://zhuanlan.zhihu.com/p/81234278
简述：

Set 和 Map 主要的应用场景在于 数据重组 和 数据储存。
Set 是一种叫做集合的数据结构，Map 是一种叫做字典的数据结构。
集合 与 字典 的区别：

共同点：集合、字典 可以储存不重复的值
不同点：集合 是以 [value, value]的形式储存元素，字典 是以 [key, value] 的形式储存 因此set是无序的
集合（Set）：
ES6 新增的一种新的数据结构，类似于数组，但成员是唯一且无序的，没有重复的值。

Set 本身是一种构造函数，用来生成 Set 数据结构。

Set 对象允许你储存任何类型的唯一值，无论是原始值或者是对象引用。

WeakSet：
WeakSet 对象允许你将弱引用对象储存在一个集合中。

WeakSet 与 Set 的区别：

WeakSet 只能储存对象引用，不能存放值，而 Set 对象都可以。
WeakSet 对象中储存的对象值都是被弱引用的，即垃圾回收机制不考虑 WeakSet 对该对象的应用，
如果没有其他的变量或属性引用这个对象值，则这个对象将会被垃圾回收掉（不考虑该对象还存在于 WeakSet 中），
所以，WeakSet 对象里有多少个成员元素，取决于垃圾回收机制有没有运行，运行前后成员个数可能不一致，遍历结束之后，
有的成员可能取不到了（被垃圾回收了），WeakSet 对象是无法被遍历的（ES6 规定 WeakSet 不可遍历），也没有办法拿到它包含的所有元素。



Set：

成员唯一、无序且不重复。
[value, value]，键值与键名是一致的（或者说只有键值，没有键名）。
！set有个特点是往内部加入值的时候不会发生类型转化，类似于精确相等计算符，
我们刚说set里面的值不可以相等，但是在set里面可以存放数字5和字符串"5"

以遍历，方法有：add、delete、has。
WeakSet：

成员都是对象。
成员都是弱引用，可以被垃圾回收机制回收，可以用来保存DOM节点，不容易造成内存泄漏。
不能遍历，方法有add、delete、has。
Map：

本质上是键值对的集合，类似集合。
可以遍历，方法很多可以跟各种数据格式转换。
map的特别点在于它的key没有规定说是数字，它的key甚至可以是一个对象。

WeakMap：

只接受对象作为键名（null除外），不接受其他类型的值作为键名。
键名是弱引用，键值可以是任意的，键名所指向的对象可以被垃圾回收，此时键名是无效的。
不能遍历，方法有get、set、has、delete。

