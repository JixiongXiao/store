//建立TCP连接的前奏
//标志位：（就是数据包）
//SYN： Synchronize Sequence Numbers 同步序列编号（背下来）
//ACK：Acknowledgement 确认字符 

/*状态：
LISTEN:侦听TCP端口的连接请求
SYN-SENT （SYN已经发送，等待回复） 在发送连接请求后等待匹配的连接请求
SYN-RECEIVED （SYN已经被接收）在收到和发送一个连接请求后等待对方连接请求的确认
ESTABILISHMENT (已经建立) 代表一个打开的连接，数据可以传输给用户
*/

//建立TCP的三次握手 具体流程图看视频88分钟  https://www.bilibili.com/video/BV1bk4y1m7zC
//https://blog.csdn.net/qq_38950316/article/details/81087809  面试题
//https://www.bilibili.com/video/BV1bi4y1x7m5?from=search&seid=14130006052079170463 另一个很详细的视频，三次握手四次挥手，复习看这个

/*

浏览器                                                  服务器
                                                  LISTEN 侦听连接请求
SYN-SENT 发送连接请求          
     SYN=1 发送序号seq=100(其实是一个随机数) ->
                                         SYN-RECEIVED 收到连接请求并确认
                               <- SYN=1 / ACK=1 seq=200 确认序号ack=101(回应的是上一个seq，并且+1)
ESTABLISHED 建立连接            
   ACK=1  seq=101(等于上一个回包的ack) ack=201->  
                                                   ESTABLISHED 连接建立
*/
//一个seq会对应一个 ack
//发包的seq的上一个回包的ack

/*
TCP三次握手总结
第一次握手：客户端向服务端发送SYN标志位 (序号为J)，并进入SYN_SENT状态（等待服务器确认状态）

第二次握手：服务器收到来自客户端的SYN J，服务端会确认该数据包已收到，并发送ACK标志位 （序号为J+1）
           和SYN标志位 （序号为K），服务器进入SYN_RECV状态 （接受请求并等待客户端确认状态）
        
第三次握手： 客户端进入连接建立状态，向服务端发送ACK标志位 （序号为K+1），表明客户端已收到，进入连接已建立状态
             此时客户端不需要再发送SYN包 因为服务端之后只需要接收到确认消息，不需要再返回标志位了。
            服务端收到ACK标志位后，服务端进入连接已建立状态           
*/

三次握手地目的就是要向服务端说明客户端可以接收信息也可以发送信息。
三次是最少的能确立通信地次数，